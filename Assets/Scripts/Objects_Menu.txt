using UnityEngine;
using System.Collections;
using UnityEngine.UI;


public class Objects_Menu : MonoBehaviour 
{
    [SerializeField]
	private Scripts scr;

    public Sprite 
        spr_SoundOn,
        spr_SoundOff;

    public Color
        col_Gray,
        col_Orange,
        col_Blue;

    [Header("Gameobject:")]
    public GameObject obj_NoAdvBut;
    public GameObject obj_unlimSlowdownBut;
    public GameObject obj_rateGame;
    public GameObject moneyCount;
    public GameObject sampleButton1;
	public GameObject evrdAw;
	public GameObject cupAw;
	public GameObject currPrPan;
	public GameObject logo;
	public GameObject menuProfile;
	public GameObject menuCareer;
	[Header("Animator:")]
	public Animator menCarAnim;
	public Animator prPlAnim;
	[Header("Other:")]
    public Image soundIm;
	public AudioSource mainThemeSource;
	public AudioSource buttonsSource;
    public RectTransform cP;
    public Text[] text_opndPlayers;
    public string[] idForTesting;

	void Awake()
	{
#if UNITY_EDITOR
        if (FindObjectOfType<Reporter>())
            DestroyImmediate(FindObjectOfType<Reporter>().gameObject);
#else
        bool doNotDestroy = false;

        for (int i = 0; i < idForTesting.Length; i++)
        {
            if (Android_Id() == idForTesting[i])
                doNotDestroy = true;
        }

        if (!doNotDestroy)
        {
            if (FindObjectOfType<Reporter>())
                DestroyImmediate(FindObjectOfType<Reporter>().gameObject);
        }
#endif

        scr = FindObjectOfType<Scripts>();

        if (PlayerPrefs.GetInt("NoAds") == 1)
            obj_NoAdvBut.SetActive(false);

        if (PlayerPrefs.GetInt("UnlimFreeze") == 1)
            obj_unlimSlowdownBut.SetActive(false);

		currPrPan.SetActive (true);
        EnableSound(true);
	}

    void Start()
    {
        if (scr.alPrScr.pldG > 20 &&
            PlayerPrefs.GetInt("Review_Done") == 0 &&
            scr.alPrScr.pldG % 5 == 0)
        {
            RateGameMessage(1); 
        }
        else
            RateGameMessage(0);
    }
	
	public void PixelPerfect()
	{
		bool pixelPerfect = gameObject.GetComponent<Canvas>().pixelPerfect;
		gameObject.GetComponent<Canvas>().pixelPerfect = !pixelPerfect;
	}

    public void EnableSound(bool isStart)
    {
        int onInt = PlayerPrefs.GetInt("SoundOn");

        int onInt_1;

        if (onInt == 0)
            onInt_1 = 1;
        else
            onInt_1 = 0;

        if (!isStart)
            PlayerPrefs.SetInt("SoundOn", onInt_1);

        onInt = PlayerPrefs.GetInt("SoundOn");

        if (onInt == 1)
        {
            mainThemeSource.enabled = true;
            buttonsSource.enabled = true;
        }
        else
        {
            mainThemeSource.enabled = false;
            buttonsSource.enabled = false;
        }

        SoundImage(onInt);
    }

    private void SoundImage(int onInt)
    {
        if (onInt == 0)
            soundIm.sprite = spr_SoundOff;
        else
            soundIm.sprite = spr_SoundOn;
    }

    public void RateGameMessage(int case0)
    {
        if (case0 == 0)
            obj_rateGame.SetActive(false);
        else if (case0 == 1)
            obj_rateGame.SetActive(true);
    }

    public void OpenGameInMarket()
    {
        Application.OpenURL("market://details?id=com.Artem.FootballHeads");
        PlayerPrefs.SetInt("Review_Done", 1);
    }

    public void Purchase_MoneyPack(int case0)
    {
        InAppPurchase_0 inAppPurch_0 = FindObjectOfType<InAppPurchase_0>();

        if (case0 == 1)
            inAppPurch_0.Purchase_MoneyPack_1();
        else if (case0 == 2)
            inAppPurch_0.Purchase_MoneyPack_2();
        else if (case0 == 3)
            inAppPurch_0.Purchase_MoneyPack_3();
    }

    public void Purchase_NoAds()
    {
        FindObjectOfType<InAppPurchase_0>().Purchase_NoAds();
    }

    public void Purchase_UnlimitedFreeze()
    {
        FindObjectOfType<InAppPurchase_0>().Purchase_UnlimFreeze();
    }

    public string Android_Id()
    {
        string android_id = "editor";

#if UNITY_EDITOR
#else
        AndroidJavaClass up = new AndroidJavaClass ("com.unity3d.player.UnityPlayer");
        AndroidJavaObject currentActivity = up.GetStatic<AndroidJavaObject> ("currentActivity");
        AndroidJavaObject contentResolver = currentActivity.Call<AndroidJavaObject> ("getContentResolver");  
        AndroidJavaClass secure = new AndroidJavaClass ("android.provider.Settings$Secure");
        android_id = secure.CallStatic<string> ("getString", contentResolver, "android_id");
#endif

        return android_id;
    }
}
