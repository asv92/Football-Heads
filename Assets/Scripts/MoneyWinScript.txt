using UnityEngine;
using System.Collections;
using UnityEngine.UI;
using System.Collections.Generic;


[System.Serializable]
public class MatchBonus
{
	public string name;
	public string nameRus;
	public int award;
}

public class MoneyWinScript : MonoBehaviour 
{
	private Scripts scr;

	public GameObject menuButton;
	public GameObject congrPan;
	public int defaultPrice;
	public int repeatTournPrice;
	public int freePlayDefaultPrice;
	public Text moneyBankText;

	public GameObject bank;
	public GameObject sampleBonus;
	public RectTransform contentPanel;

	public List<MatchBonus> bonusList;

	public bool isMoneyToBank;
	private bool updatesChecked;
	public int totalPrice;

	private float totalPrice0;
	private float timer;
	private int bankMoney;
	private bool advertiseShown;
	private bool chWin;

	void Awake()
	{
        scr = FindObjectOfType<Scripts>();

		if (!scr.objLev.isMoneyWinPopulate)
		{
			congrPan.SetActive (true);
			menuButton.SetActive(false);
			moneyBankText.text = scr.univFunc.moneyString(scr.alPrScr.moneyCount);
			bankMoney = scr.alPrScr.moneyCount;
			DestroyEditorButtons ();
			PopulateList ();

			congrPan.SetActive (false);
		}
	}

	private void DestroyEditorButtons()
	{
		GameObject[] bonusObj = GameObject.FindGameObjectsWithTag ("SampleBonus");

		for (int i = 0; i < bonusObj.Length; i++)
			DestroyImmediate (bonusObj [i]);
	}

	private void PopulateList()
	{
		foreach (var item in bonusList)
		{
			GameObject bonusObj = Instantiate(sampleBonus) as GameObject;
			SampleBonus bonus = bonusObj.GetComponent<SampleBonus> ();
			bonus.award = item.award;
			bonus.awardText.text = scr.univFunc.moneyString (item.award);

			int lang = UniversalFunctions.sysLang();
            bonus.name0 = item.name;

			if (lang == 1 && scr.alPrScr.lCh)
				bonus._name.text = item.nameRus;
			else
				bonus._name.text = item.name;

			bonusObj.transform.SetParent (contentPanel);
		}

		GameObject[] bonusObj1 = GameObject.FindGameObjectsWithTag ("SampleBonus");
		Debug.Log("bonusObj.length = " + bonusObj1.Length);
		scr.objLev.isMoneyWinPopulate = true;
	}

	private void CheckChallengeWin()
	{
		if (scr.alPrScr.task == 0 || scr.alPrScr.task == 3)
			chWin = true;
		else if (scr.alPrScr.task == 1)
		{
			if (Score.score >= scr.alPrScr.tGoals)
				chWin = true;
			else
				chWin = false;
		}
		else if (scr.alPrScr.task == 2)
		{
			if (Score.score - Score.score1 >= scr.alPrScr.tGoals)
				chWin = true;
			else
				chWin = false;
		}
		else if (scr.alPrScr.task == 4)
		{
			if (Score.score >= scr.alPrScr.tGoals && Score.score1 == 0)
				chWin = true;
			else
				chWin = false;
		}
	}

	public bool wonLeague;

	public void TournamentGameResult()
	{
        if (scr.alPrScr.isRandGame == 0)
        {
            int lg = scr.alPrScr.lg;
            int game = scr.alPrScr.game;

            if (lg == 1)
            {
                if (TimeManager.resOfGame == 1 && chWin)
                {
                    if (game != 10)
                        scr.alPrScr.opndGamesL1[game] = 1;
                    else
                    {
                        if (scr.alPrScr.wonGamesL1[9] == 0)
                        {
                            scr.alPrScr.opndGamesL2[0] = 1; 
                            wonLeague = true;
                        }
                    }

                    scr.alPrScr.wonGamesL1[game - 1] = 1;
                }
            }
            else if (lg == 2)
            {
                if (TimeManager.resOfGame == 1 && chWin)
                {
                    if (game != 10)
                        scr.alPrScr.opndGamesL2[game] = 1;
                    else
                    {
                        if (scr.alPrScr.wonGamesL2[9] == 0)
                        {
                            scr.alPrScr.opndGamesL3[0] = 1; 
                            wonLeague = true;
                        }
                    }

                    scr.alPrScr.wonGamesL2[game - 1] = 1;
                }
            }
            else if (lg == 3)
            {
                if (TimeManager.resOfGame == 1 && chWin)
                {
                    if (game != 10)
                        scr.alPrScr.opndGamesL3[game] = 1;
                    else
                    {
                        if (scr.alPrScr.wonGamesL3[9] == 0)
                        {
                            scr.alPrScr.opndGamesL4[0] = 1; 
                            wonLeague = true;
                        }
                    }

                    scr.alPrScr.wonGamesL3[game - 1] = 1;
                }
            }       
            else if (lg == 4)
            {
                if (TimeManager.resOfGame == 1 && chWin)
                {
                    if (game != 10)
                        scr.alPrScr.opndGamesL4[game] = 1;
                    else
                    {
                        if (scr.alPrScr.wonGamesL4[9] == 0)
                        {
                            scr.alPrScr.opndGamesL5[0] = 1; 
                            wonLeague = true;
                        }
                    }

                    scr.alPrScr.wonGamesL4[game - 1] = 1;
                }
            }
            else if (lg == 5)
            {
                if (TimeManager.resOfGame == 1 && chWin)
                {
                    if (game != 10)
                        scr.alPrScr.opndGamesL5[game] = 1;
                    else
                    {
                        if (scr.alPrScr.wonGamesL5[9] == 0)
                            wonLeague = true;
                    }

                    scr.alPrScr.wonGamesL5[game - 1] = 1;
                }
            }

            scr.alPrScr.doCh = true;
        }
	}

	public void CheckForBonuses()
	{
		CheckChallengeWin();

		GameObject[] bonusObj = GameObject.FindGameObjectsWithTag ("SampleBonus");
		SampleBonus[] sampBonus = new SampleBonus[bonusObj.Length];

		for (int i = 0; i < bonusObj.Length; i++) 
			sampBonus [i] = bonusObj [i].GetComponent<SampleBonus> ();

		// Disable bonuses, whitch were not got in this game.
		for (int i = 0; i < sampBonus.Length; i++) 
		{
            if (sampBonus [i].name0 == "award")
            {
                if (TimeManager.resOfGame == 1 && chWin && scr.alPrScr.isRandGame == 0) 
                {
                    sampBonus [i].award = scr.alPrScr.award;
                    sampBonus [i].awardText.text = scr.univFunc.moneyString(sampBonus [i].award);
                }
                else
                {
                    sampBonus [i].award = 0;
                    bonusObj [i].SetActive (false);         
                }
            }
            else if (sampBonus [i].name0 == "win in match")
			{
				if (TimeManager.resOfGame == 1) 
				{
					sampBonus [i].award = 500;
					sampBonus [i].awardText.text = scr.univFunc.moneyString(sampBonus [i].award);
				}
				else
				{
					sampBonus [i].award = 0;
					bonusObj [i].SetActive (false);			
				}
			}
            else if (sampBonus [i].name0 == "clean match")
			{
                if (Score.score1 != 0)
				{
					sampBonus [i].award = 0;
					bonusObj [i].SetActive (false);	
				}
			}
            else if (sampBonus [i].name0 == "scored goals: #") 
			{
				int oneGoalAward = sampBonus [i].award;
				sampBonus [i].award = Score.score * oneGoalAward;
				sampBonus [i].awardText.text = scr.univFunc.moneyString (sampBonus [i].award);

				string nameStr = sampBonus [i]._name.text;

				if (nameStr.Contains("#"))
				{
                    string nameStr1 = nameStr.Replace ("#", Score.score.ToString ());
					sampBonus [i]._name.text = nameStr1;
				}
			}
		}

		for (int i = 0; i < sampBonus.Length; i++) 
		{
			if (sampBonus [i].name0 == "total")
			{
				for (int j = 0; j < sampBonus.Length; j++)
				{
					if (i != j && bonusObj[j].activeSelf)
						sampBonus [i].award += sampBonus [j].award;
				}

				scr.objLev.totalPrice = sampBonus [i].award;
				totalPrice = scr.objLev.totalPrice;
				Debug.Log ("totalPrice = " + scr.objLev.totalPrice);
				sampBonus [i].awardText.text = scr.univFunc.moneyString (sampBonus [i].award);
			}
		}

		updatesChecked = true;
	}
		
	void Update()
	{
		if (isMoneyToBank && updatesChecked)
		{
			timer += Time.deltaTime;

			if (timer <= Time.deltaTime && timer != 0)
			{
				scr.alPrScr.moneyCount += totalPrice;

                if (scr.alPrScr.moneyCount > 100000000)
                    scr.alPrScr.moneyCount = 100000000;

				scr.alPrScr.setMoney = true;
			} 
			else if (timer >= 0.8f)
			{
				if (totalPrice > 0)
				{
					if (timer >= 1 && timer < 1 + Time.deltaTime)
					{
						scr.levAudScr.moneyWinSource.Play();
						scr.levAudScr.moneyWinSource1.PlayDelayed(0.2f);
					}

					if (totalPrice > 10000)
					{
						totalPrice -= 1000;
						bankMoney += 1000;
					} 
					else if (totalPrice > 1000)
					{
						totalPrice -= 100;
						bankMoney += 100;
					} 
					else if (totalPrice <= 1000 && totalPrice > 10)
					{
						totalPrice -= 10;
						bankMoney += 10;
					}
					else
					{
						totalPrice -= 1;
						bankMoney += 1;
					}

					if (bankMoney > 10000000)
						bankMoney = 10000000;

					moneyBankText.text = scr.univFunc.moneyString(bankMoney);
				} 
				else
				{
					if (scr.levAudScr.moneyWinSource.isPlaying)
					{
						scr.levAudScr.moneyWinSource.Stop();
						scr.levAudScr.moneyWinSource1.Stop();
						isMoneyToBank = false;
						menuButton.SetActive(true);
					}

					if (!menuButton.activeSelf)
						menuButton.SetActive(true);

					if (!advertiseShown)
					{
						scr.objLev.ShowInterstitialAd();
						advertiseShown = true;
					}
				}
			}
		}
	}
		


	public void SetMoneyWin()
	{
		moneyBankText.gameObject.SetActive(true);
		isMoneyToBank = true;
		Time.timeScale = 1;
	}
}
