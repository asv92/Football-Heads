using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;
using UnityEngine.SceneManagement;
using System.Collections;
using System.Collections.Generic;


[System.Serializable]
public class TaskItem 
{
	[Header("Score N goals")]
	public int[] t1Goals;
	[Header("Win with N goals difference")]
	public int[] t2Goals;
	[Header("Win with start N goals difference")]
	public int[] t3Goals;
	[Header("Miss 0 goals, score N goals")]
	public int[] t4Goals;
}

public class CareerManager : MonoBehaviour
{
	private Scripts scr;

	public Color lgColor;
	public Sprite shSprLckd;
	public Sprite shSprOpnd;
    public Sprite shSprOpnd_1;
	public Image awardIm;

	public CareerSampleButton playButScr;

	public TaskItem tasks;

	private Sprite[] awardsSpr = new Sprite[5];
    private Sprite[] lockedAwSpr = new Sprite[5];

	public Text[] lgTexts;
	public Text[] gameTexts;

	public int[] 
	lg1Awards = new int[10],
	lg2Awards = new int[10],
	lg3Awards = new int[10],
	lg4Awards = new int[10],
	lg5Awards = new int[10];

	void Awake () 
	{
        scr = FindObjectOfType<Scripts>();

        for (int i = 0; i < awardsSpr.Length; i++)
        {
            awardsSpr[i] = scr.topPanMng.colorCareerImages[i].sprite;
            lockedAwSpr[i] = scr.topPanMng.grayCareerImages[i].sprite;
        }

		TranslateText();
		SetRealAwards();

		LeagueMenu(scr.alPrScr.lg);
	}

	private void TranslateText()
	{
		int lg = UniversalFunctions.sysLang();

		if (lg == 1 && scr.alPrScr.lCh)	
		{
			playButScr.awardWord.text = "приз:";
			playButScr.plText.text = "соперник";
			playButScr.stadText.text = "стадион";
		}
		else
		{
			playButScr.awardWord.text = "award:";
			playButScr.plText.text = "opponent";
			playButScr.stadText.text = "stadium";
		}
	}

	private void CheckIfGameWon(int lg, int game)
	{
		if (lg == 1)
			playButScr.galka.enabled = scr.univFunc.Int2Bool(scr.alPrScr.wonGamesL1[game - 1]);
		else if (lg == 2)
			playButScr.galka.enabled = scr.univFunc.Int2Bool(scr.alPrScr.wonGamesL2[game - 1]);
		else if (lg == 3)
			playButScr.galka.enabled = scr.univFunc.Int2Bool(scr.alPrScr.wonGamesL3[game - 1]);
		else if (lg == 4)
			playButScr.galka.enabled = scr.univFunc.Int2Bool(scr.alPrScr.wonGamesL4[game - 1]);
		else if (lg == 5)
			playButScr.galka.enabled = scr.univFunc.Int2Bool(scr.alPrScr.wonGamesL5[game - 1]);
	}

	private void SetRealAwards()
	{
		for (int lg = 1; lg <= 6; lg++)
		{
			for (int game = 1; game <= 10; game++)
			{
				if (lg == 1)
				{
					if (scr.alPrScr.opndGamesL1[game - 1] == 1 && scr.alPrScr.wonGamesL1[game - 1] == 1)
						lg1Awards[game - 1] = 0;
				}
				else if (lg == 2)
				{
					if (scr.alPrScr.opndGamesL2[game - 1] == 1 && scr.alPrScr.wonGamesL2[game - 1] == 1)
						lg1Awards[game - 1] = 0;
				}
				else if (lg == 3)
				{
					if (scr.alPrScr.opndGamesL3[game - 1] == 1 && scr.alPrScr.wonGamesL3[game - 1] == 1)
						lg1Awards[game - 1] = 0;
				}
				else if (lg == 4)
				{
					if (scr.alPrScr.opndGamesL4[game - 1] == 1 && scr.alPrScr.wonGamesL4[game - 1] == 1)
						lg1Awards[game - 1] = 0;
				}
				else if (lg == 5)
				{
					if (scr.alPrScr.opndGamesL5[game - 1] == 1 && scr.alPrScr.wonGamesL5[game - 1] == 1)
						lg1Awards[game - 1] = 0;
				}
			}
		}
	}
		
	/// <summary>
	/// Preview of menu career. case0 = 0 meaning Choose another player.
	/// </summary>
	/// <param name="case0">Case0.</param>
	public void CareerPreview(int case0)
	{				
		int lang = UniversalFunctions.sysLang();

		if (case0 == 0)
		{
			if (lang == 1 && scr.alPrScr.lCh)
				scr.prevScr.prevText.text = "Выберите другого игрока!";
			else
				scr.prevScr.prevText.text = "Choose another player!";

			scr.prevScr.prevAnim.gameObject.SetActive(true);
			scr.prevScr.prevAnim.SetBool ("call", true);
		}
		else if (case0 == 1)
		{
			if (lang == 1 && scr.alPrScr.lCh)
				scr.prevScr.prevText.text = "Выиграйте предыдущую игру, чтобы открыть эту!";
			else
				scr.prevScr.prevText.text = "Win previous game to open this!";

			scr.prevScr.prevAnim.gameObject.SetActive(true);
			scr.prevScr.prevAnim.SetBool ("call", true);
		}
	}

	public void CareerPreviewBack()
	{
		scr.prevScr.prevAnim.SetBool ("call", false);
		scr.prevScr.prevAnim.gameObject.SetActive(false);
	}

	public void LeagueMenu(int lg)
	{
		scr.alPrScr.lg = lg;
		scr.alPrScr.game = LatestMatch(lg);
		scr.alPrScr.doCh = true;
		SetShowcaseOfGame(lg, scr.alPrScr.game);

		for (int i = 0; i < lgTexts.Length; i++)
		{
			if (i == lg - 1)
				lgTexts[i].color = lgColor;
			else
				lgTexts[i].color = Color.white;
		}

		for (int i = 0; i < gameTexts.Length; i++)
		{
			if (i == scr.alPrScr.game - 1)
				gameTexts[i].color = lgColor;
			else
				gameTexts[i].color = Color.white;
		}

		SetTasks(lg, scr.alPrScr.game);
		CheckIfGameWon(lg, scr.alPrScr.game);
        awardIm.sprite = LeagueAwardSpr(lg);

        if (!scr.gM.menuBools.menu)
		    scr.objM.buttonsSource.Play();

		SetColorsOfGameButtons(lg, scr.alPrScr.game);
		SetColorsOfLeagueButtons(lg);
	}

	private int LatestMatch(int lg)
	{
		int lM = 0;

		for (int i = 0; i < 10; i++)
		{
			if (lg == 1 && scr.alPrScr.wonGamesL1[i] == 1)
				lM ++;
			else if (lg == 2 && scr.alPrScr.wonGamesL2[i] == 1)
				lM ++;
			else if (lg == 3 && scr.alPrScr.wonGamesL3[i] == 1)
				lM ++;
			else if (lg == 4 && scr.alPrScr.wonGamesL4[i] == 1)
				lM ++;
			else if (lg == 5 && scr.alPrScr.wonGamesL5[i] == 1)
				lM ++;
		}

        if (lM != 10)
            return lM + 1;
        else
            return 1;
	}

	private void SetColorsOfGameButtons(int lg, int game)
	{
		for (int i = 0; i < gameTexts.Length; i++)
			gameTexts[i].color = Color.white;

		for (int i = 0; i < gameTexts.Length; i++)
		{
			if (lg == 1 && scr.alPrScr.opndGamesL1[i] == 0)
				gameTexts[i].color = Color.gray;
			else if (lg == 2 && scr.alPrScr.opndGamesL2[i] == 0)
				gameTexts[i].color = Color.gray;
			else if (lg == 3 && scr.alPrScr.opndGamesL3[i] == 0)
				gameTexts[i].color = Color.gray;
			else if (lg == 4 && scr.alPrScr.opndGamesL4[i] == 0)
				gameTexts[i].color = Color.gray;
			else if (lg == 5 && scr.alPrScr.opndGamesL5[i] == 0)
				gameTexts[i].color = Color.gray;
		}

		gameTexts[game - 1].color = lgColor;
	}

	private void SetColorsOfLeagueButtons(int lg)
	{
		for (int i = 0; i < lgTexts.Length; i++)
			lgTexts[i].color = Color.white;

		if (scr.alPrScr.wonGamesL1[9] == 0)
			lgTexts[1].color = Color.gray;
		
		if (scr.alPrScr.wonGamesL2[9] == 0)
			lgTexts[2].color = Color.gray;
		
		if (scr.alPrScr.wonGamesL3[9] == 0)
			lgTexts[3].color = Color.gray;
		
		if (scr.alPrScr.wonGamesL4[9] == 0)
			lgTexts[4].color = Color.gray;
		
		lgTexts[lg - 1].color = lgColor;
	}

	public void GameMenu(int game)
	{
		scr.alPrScr.game = game;
		scr.alPrScr.doCh = true;

		int lg = scr.alPrScr.lg;

		SetShowcaseOfGame(scr.alPrScr.lg, game);
		SetColorsOfGameButtons(lg, game);
		SetTasks(scr.alPrScr.lg, game);
		CheckIfGameWon(scr.alPrScr.lg, game);

		scr.objM.buttonsSource.Play();
	}

	private void SetTasks(int lg, int game)
	{
		int goals;
		int lng = UniversalFunctions.sysLang();
        string goalWRus, ballWRus;


		if (game == 3)
		{
			scr.alPrScr.task = 1;
			goals = tasks.t1Goals[lg - 1];
			scr.alPrScr.tGoals = goals;
            goalWRus = goals < 4 ? "гола" : "голов";

			if (lng == 1 && scr.alPrScr.lCh)	
                playButScr.taskText.text = "Забей " + goals.ToString() + " " + goalWRus + " и выиграй матч!";
			else
				playButScr.taskText.text = "Score " + goals.ToString() + " goals and win the match!";
		}
		else if (game == 5)
		{
			scr.alPrScr.task = 2;
			goals = tasks.t2Goals[lg - 1];
			scr.alPrScr.tGoals = goals;
            ballWRus = goals < 4 ? "мяча" : "мячей";

			if (lng == 1 && scr.alPrScr.lCh)	
                playButScr.taskText.text = "Выиграй с разницей " + goals.ToString() + " " + ballWRus + "!";
			else
				playButScr.taskText.text = "Win with difference " + goals.ToString() + " goals!";
		}
		else if (game == 7)
		{
			scr.alPrScr.task = 3;
			goals = tasks.t3Goals[lg - 1];
			scr.alPrScr.tGoals = goals;
            ballWRus = goals < 4 ? "мяча" : "мячей";

			if (lng == 1 && scr.alPrScr.lCh)	
                playButScr.taskText.text = "Выиграй со стартовым отставанием в " + goals.ToString() + " " + ballWRus + "!";
			else
				playButScr.taskText.text = "Win with start difference " + goals.ToString() + " goals!";
		}
		else if (game == 9)
		{
			scr.alPrScr.task = 4;
			goals = tasks.t4Goals[lg - 1];
			scr.alPrScr.tGoals = goals;
            goalWRus = goals < 4 ? "гола" : "голов";

			if (lng == 1 && scr.alPrScr.lCh)	
                playButScr.taskText.text = "Забей " + goals.ToString() + " " + goalWRus + " и не пропусти!";
			else
				playButScr.taskText.text = "Score " + goals.ToString() + " goals and don't miss!";
		}
		else
		{
			scr.alPrScr.task = 0;
			scr.alPrScr.tGoals = 0;

			if (lng == 1 && scr.alPrScr.lCh)	
				playButScr.taskText.text = "Выиграй матч!";
			else
				playButScr.taskText.text = "Win the game!";
		}
			
		scr.alPrScr.doCh = true;
	}

	// Load tournament game!
	public void LoadTournamentGame()
	{
		int lg = scr.alPrScr.lg;
		int game = scr.alPrScr.game;

		if (CheckIfGameOpened(lg, game))
		{
			int ind = (game - 1) + 10 * (lg - 1);

            if (ind != scr.alPrScr.buttonIndex)
			{
				SetEnemyInTournament(lg, game);
				SetAwardForGameWin(lg, game);
				PlayerPrefs.SetString ("TaskString", playButScr.taskText.text);
				SceneManager.LoadScene("Level");
			}
			else
				CareerPreview(0);
		}
		else
			CareerPreview(1);

		scr.objM.buttonsSource.Play();
	}

	private Sprite ShowcaseSpr (int game, int opnd)
	{
        if (opnd == 0)
            return shSprLckd;
        else
        {
            if (game == 10)
                return shSprOpnd_1;
            else
                return shSprOpnd;
        }
			
	}

	private void SetEnemyInTournament(int lg, int game)
	{
		int ind = (game - 1) + 10 * (lg - 1);
		Debug.Log("lg = " + lg + ", game = " + game + ", ind = " + ind);
        //plInd = scr.prMng.profBut0[ind].GetComponent<ProfileSampleButton>().plInd;
        scr.alPrScr.enemyIndex = plInd;
		scr.alPrScr.doCh = true;
	}

	private void SetAwardForGameWin(int lg, int game)
	{
		if (lg == 1)
			scr.alPrScr.award = lg1Awards[game - 1];
		else if (lg == 2)
			scr.alPrScr.award = lg2Awards[game - 1];
		else if (lg == 3)
			scr.alPrScr.award = lg3Awards[game - 1];
		else if (lg == 4)
			scr.alPrScr.award = lg4Awards[game - 1];
		else if (lg == 5)
			scr.alPrScr.award = lg5Awards[game - 1];

		scr.alPrScr.doCh = true;
	}

	private bool CheckIfGameOpened(int lg, int game)
	{
		if (lg == 1)
			return scr.univFunc.Int2Bool(scr.alPrScr.opndGamesL1[game - 1]);
		else if (lg == 2)
			return scr.univFunc.Int2Bool(scr.alPrScr.opndGamesL2[game - 1]);
		else if (lg == 3)
			return scr.univFunc.Int2Bool(scr.alPrScr.opndGamesL3[game - 1]);
		else if (lg == 4)
			return scr.univFunc.Int2Bool(scr.alPrScr.opndGamesL4[game - 1]);
		else if (lg == 5)
			return scr.univFunc.Int2Bool(scr.alPrScr.opndGamesL5[game - 1]);
		else
			return false;
	}

    private int plInd;
    private int cntrInd;

	private void SetShowcaseOfGame(int lg, int game)
	{
		int ind = (lg - 1) * 10 + (game - 1);
        plInd = scr.prMng.profBut0[ind].GetComponent<ProfileSampleButton>().plInd;
        cntrInd = scr.prMng.itemList[plInd].cntrInd;

        playButScr.plIm.sprite = scr.prMng.itemList[plInd].icon;
        playButScr.legIm.sprite = scr.cntrL.Countries[cntrInd].boot;
        
		scr.alPrScr.stadium = scr.stL.TournamentStadium(lg, scr.alPrScr.game);
		playButScr.stIm.sprite = scr.stL.stadSprs[scr.alPrScr.stadium];

		if (lg == 1)
		{
			playButScr.showcase.sprite = ShowcaseSpr(game, scr.alPrScr.opndGamesL1[game - 1]);

			if (lg1Awards[game - 1] != 0)
			{
				playButScr.awardCount.enabled = true;
				playButScr.awardWord.enabled = true;
				playButScr.awardCount.text = scr.univFunc.moneyString(lg1Awards[game - 1]);
			}
			else
			{
				playButScr.awardCount.enabled = false;
				playButScr.awardWord.enabled = false;
			}
		}
		else if (lg == 2)
		{
            playButScr.showcase.sprite = ShowcaseSpr(game, scr.alPrScr.opndGamesL2[game - 1]);

			if (lg2Awards[game - 1] != 0)
			{
				playButScr.awardCount.enabled = true;
				playButScr.awardWord.enabled = true;
				playButScr.awardCount.text = scr.univFunc.moneyString(lg2Awards[game - 1]);
			}
			else
			{
				playButScr.awardCount.enabled = false;
				playButScr.awardWord.enabled = false;
			}
		}
		else if (lg == 3)
		{
            playButScr.showcase.sprite = ShowcaseSpr(game, scr.alPrScr.opndGamesL3[game - 1]);

			if (lg3Awards[game - 1] != 0)
			{
				playButScr.awardCount.enabled = true;
				playButScr.awardWord.enabled = true;
				playButScr.awardCount.text = scr.univFunc.moneyString(lg3Awards[game - 1]);
			}
			else
			{
				playButScr.awardCount.enabled = false;
				playButScr.awardWord.enabled = false;
			}
		}
		else if (lg == 4)
		{
            playButScr.showcase.sprite = ShowcaseSpr(game, scr.alPrScr.opndGamesL4[game - 1]);

			if (lg4Awards[game - 1] != 0)
			{
				playButScr.awardCount.enabled = true;
				playButScr.awardWord.enabled = true;
				playButScr.awardCount.text = scr.univFunc.moneyString(lg4Awards[game - 1]);
			}
			else
			{
				playButScr.awardCount.enabled = false;
				playButScr.awardWord.enabled = false;
			}
		}
		else if (lg == 5)
		{
            playButScr.showcase.sprite = ShowcaseSpr(game, scr.alPrScr.opndGamesL5[game - 1]);

			if (lg5Awards[game - 1] != 0)
			{
				playButScr.awardCount.enabled = true;
				playButScr.awardWord.enabled = true;
				playButScr.awardCount.text = scr.univFunc.moneyString(lg5Awards[game - 1]);
			}
			else
			{
				playButScr.awardCount.enabled = false;
				playButScr.awardWord.enabled = false;
			}
		}

		scr.alPrScr.doCh = true;
	}
		
	private Sprite LeagueAwardSpr(int lg)
	{
		if (lg == 1)
		{
			if (scr.alPrScr.opndGamesL1[0] == 1)
				return awardsSpr[0];
			else
				return lockedAwSpr[0];
		} 
		else if (lg == 2)
		{
			if (scr.alPrScr.opndGamesL2[0] == 1)
				return awardsSpr[1];
			else
				return lockedAwSpr[1];
		}
		else if (lg == 3)
		{
			if (scr.alPrScr.opndGamesL3[0] == 1)
				return awardsSpr[2];
			else
				return lockedAwSpr[2];
		}
		else if (lg == 4)
		{
			if (scr.alPrScr.opndGamesL4[0] == 1)
				return awardsSpr[3];
			else
				return lockedAwSpr[3];
		}
		else if (lg == 5)
		{
			if (scr.alPrScr.opndGamesL5[0] == 1)
				return awardsSpr[4];
			else
				return lockedAwSpr[4];
		}
		else
			return awardsSpr[0];
	}
}
